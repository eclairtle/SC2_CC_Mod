include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Contingency Contracts
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int lib966DE777_ge_CCforEnemyorPlayer_Enemy = 0;
const int lib966DE777_ge_CCforEnemyorPlayer_EnemyExclusive = 1;
const int lib966DE777_ge_CCforEnemyorPlayer_Player = 2;
const int lib966DE777_ge_CCforEnemyorPlayer_PlayerExclusive = 3;
const int lib966DE777_ge_CCforEnemyorPlayer_Both = 4;
const int lib966DE777_ge_CCforEnemyorPlayer_All = 5;
const int lib966DE777_ge_CCCheckState_On = 0;
const int lib966DE777_ge_CCCheckState_Available = 1;
const int lib966DE777_ge_CCResearchType_None = 0;
const int lib966DE777_ge_CCResearchType_Protoss = 1;
const int lib966DE777_ge_CCResearchType_Zerg = 2;
const int lib966DE777_ge_CCResearchType_Both = 3;
const int lib966DE777_ge_CCCampaignIndex_None = 0;
const int lib966DE777_ge_CCCampaignIndex_WoL = 1;
const int lib966DE777_ge_CCCampaignIndex_HotS = 2;
const int lib966DE777_ge_CCCampaignIndex_LotV = 3;
const int lib966DE777_ge_CCCampaignIndex_NCO = 4;
const int lib966DE777_ge_CCCampaignIndex_WoLZeratul = 5;
const int lib966DE777_ge_CCCampaignIndex_LotVPrologue = 6;
const int lib966DE777_ge_CCCampaignIndex_Epilogue = 7;
const int lib966DE777_ge_CCCampaignIndex_Undertale = 8;

// Variable Declarations
bool lib966DE777_gv_cCResearchTypeInitialized;
int lib966DE777_gv_cCMissionCount;
int lib966DE777_gv_cCCurrentGameSpeed;
bool[16] lib966DE777_gv_cC_Enemy_Has_AI;
string lib966DE777_gv_cCDefaultLighting;
bool lib966DE777_gv_cCAllowLightingChange;
string lib966DE777_gv_mapTerrain;
int lib966DE777_gv_fUNDS_PER_LEVEL;
int lib966DE777_gv_cCMinContingencyLevel;
int lib966DE777_gv_cCTotalContingencyLevel;
int lib966DE777_gv_cCTotalSupportLevel;
int lib966DE777_gv_cCRewardFund;
int lib966DE777_gv_cCRewardProtoss;
int lib966DE777_gv_cCRewardZerg;
int lib966DE777_gv_cCExpendFund;
int lib966DE777_gv_cCExpendProtoss;
int lib966DE777_gv_cCExpendZerg;
int lib966DE777_gv_cCRewardPool;
int lib966DE777_gv_cCRewardPoolProtoss;
int lib966DE777_gv_cCRewardPoolZerg;
int lib966DE777_gv_cCFundAvailable;
int lib966DE777_gv_cC_GameStart;
playergroup lib966DE777_gv_cCPlayerSide;
playergroup lib966DE777_gv_cCPlayerSideExclusive;
playergroup lib966DE777_gv_cCEnemySide;
int lib966DE777_gv_cCPrimaryEnemy;
int lib966DE777_gv_cCPlayerFactionIndex;
int lib966DE777_gv_ccdebug;
fixed lib966DE777_gv_cCEnemyWaveMultiplier;
int lib966DE777_gv_cCBonusObjectivesTotal;
int lib966DE777_gv_cCBonusObjectivesCompleted;
bool lib966DE777_gv_cCRandomizerActive;
fixed lib966DE777_gv_randomizecostupperbound;
fixed lib966DE777_gv_randomizecostlowerbound;
int lib966DE777_gv_productionCategoryCount;
int lib966DE777_gv_productionTypeCount;
int lib966DE777_gv_reqCategoryCount;
int lib966DE777_gv_reqTypeCount;
int[6] lib966DE777_gv_productionExemptCategory;
string[6] lib966DE777_gv_productionExemptType;
int lib966DE777_gv_cCTopbarCreated;
unit[16] lib966DE777_gv_cCTopbarUnit;
int[16] lib966DE777_gv_cCTopbarPanel;
bool lib966DE777_gv_retaliateSolarLance;
unitgroup lib966DE777_gv_spawnedPickups;
int lib966DE777_gv_spawnPickupLimit;
timer lib966DE777_gv_resourceDrainTimer;
int lib966DE777_gv_resourceDrainTimerWindow;
int lib966DE777_gv_resourceDrainInterval;
int lib966DE777_gv_mineralDrain;
int lib966DE777_gv_vespeneDrain;
fixed lib966DE777_gv_collapsalpickfundpool;
unitgroup lib966DE777_gv_collapsals;
fixed lib966DE777_gv_cCSuppliesLost;
fixed lib966DE777_gv_cCDeathlessSupplyQuota;
timer lib966DE777_gv_cCZergAssaultTimer;
string lib966DE777_gv_currentCCClimate;
timer lib966DE777_gv_cCClimateTimer;
int lib966DE777_gv_cCClimateTimerWindow;
int lib966DE777_gv_cCClimateToggleState;
fixed lib966DE777_gv_cCClimateDuration;
fixed lib966DE777_gv_cCClimateCooldown;
unit[16] lib966DE777_gv_playerPrimaryBase;
int[17] lib966DE777_gv_ionCannonCharges;
int lib966DE777_gv_ionCannonMaxCharge;
unitfilter lib966DE777_gv_cCDefaultFilter;
int lib966DE777_gv_cCTick025seconds;
bool lib966DE777_gv_cCGamePaused;
int[11][81] lib966DE777_gv_cCContractBtn;
int lib966DE777_gv_cCStartBtn;
string[11][81] lib966DE777_gv_cCContractList;
int lib966DE777_gv_cCDialogue;
int[11] lib966DE777_gv_cCClassBtn;
int lib966DE777_gv_cCCurrentClass;
int[16] lib966DE777_gv_cCStatLabels;
int[16] lib966DE777_gv_cCOtherLabels;
text lib966DE777_gv_cCStartGameTxt;
int lib966DE777_gv_cCCurrentTopbarType;
int lib966DE777_gv_cCUpdateToggledOffContracts;

// Function Declarations
void lib966DE777_gf_InitializeResearchType (int lp_type);
void lib966DE777_gf_SetCCTechRestriction (bool lp_unlockAll, int lp_campaign);
bool lib966DE777_gf_CheckCCTechRequirement (string lp_instance, int lp_campaignID, int lp_missionCount);
void lib966DE777_gf_ContingencyContractMasterInit (int lp_campaign, int lp_researchType, int lp_minRisk, int lp_maxRewardRisk, int lp_maxResearchReward, int lp_credits, int lp_bonusNodes);
int lib966DE777_gf_GetCCCreditReward ();
int lib966DE777_gf_GetCCResearchReward (int lp_researchType);
playergroup lib966DE777_gf_GetCCTargetPlayerGroup (int lp_enemyorPlayer);
bool lib966DE777_gf_CCUnitinUnitTypeList (string lp_unitType, string lp_instance);
bool lib966DE777_gf_CCUnitisCategory (string lp_unitType, string lp_category);
void lib966DE777_gf_CCRemoveBullies (unitgroup lp_units);
void lib966DE777_gf_CCFactionSwapUnit (unit lp_targetUnit, int lp_factionIndex);
void lib966DE777_gf_CCFactionSwapPlayerStart ();
string lib966DE777_gf_CCEnemyFactionSwapUnitType (string lp_sourceUnitType);
int lib966DE777_gf_GetUnitTierIndex (string lp_targetUnitType);
int lib966DE777_gf_GetStructureTierIndex (string lp_targetUnitType);
void lib966DE777_gf_CCdebugmessage (text lp_message);
void lib966DE777_gf_CCSetAttackWaveMultipliers ();
void lib966DE777_gf_AIAdvancedWaveTARGET (int lp_wavePlayerOwner, int lp_wavePlayerVictim, point lp_waveGatherPoint, bool lp_useAttackPoint, point lp_waveAttackPoint);
void lib966DE777_gf_CCAttackWaveADDUNITS (int lp_player, int lp_easyUnitBaseCount, int lp_mediumUnitBaseCount, int lp_hardUnitBaseCount, int lp_brutalUnitBaseCount, string lp_unitType, bool lp_locked);
void lib966DE777_gf_CCAttackWaveLAUNCH (int lp_wavePlayerOwner, int lp_waveTimerBase, string lp_extraUnitType, int lp_extraUnitMaxAmount, bool lp_wait);
void lib966DE777_gf_CCAttackWaveSPAWN (int lp_spawnOwner, point lp_spawnLocationPoint, point lp_spawnAttackPoint, int lp_easyUnitBaseCount, int lp_mediumUnitBaseCount, int lp_hardUnitBaseCount, int lp_brutalUnitBaseCount, string lp_unitType);
void lib966DE777_gf_SendBonusObjectivesCompletionEvent ();
void lib966DE777_gf_SendBonusObjectiveNodeEvent ();
void lib966DE777_gf_AllBonusObjectivesComplete (trigger t);
void lib966DE777_gf_BonusObjectiveNodeComplete (trigger t);
unit lib966DE777_gf_RandomizerReplaceUnitGround (int lp_tier, unit lp_targetUnit, bool lp_playReadySound);
unit lib966DE777_gf_RandomizerReplaceUnitAir (int lp_tier, unit lp_targetUnit, bool lp_playReadySound);
void lib966DE777_gf_CCApplyRandomizetoUnit (unit lp_target);
void lib966DE777_gf_CCRandomizerStart ();
void lib966DE777_gf_CCBanallProductionExcept ();
void lib966DE777_gf_CCBanCategoryofExemptTypes ();
string lib966DE777_gf_CCGetProgressUnitCategory (string lp_unitType);
void lib966DE777_gf_CCProductionBanStart ();
void lib966DE777_gf_CreateCCTopbarAbility (string lp_contract, string lp_overrideAbility);
void lib966DE777_gf_RetaliateSolarLance (unit lp_targetUnit, unit lp_damagedUnit, int lp_damagedPlayer, int lp_targetPlayer);
void lib966DE777_gf_SpawnResourcePickup ();
void lib966DE777_gf_StartResourceDrainTimer ();
void lib966DE777_gf_ManageCollapsals ();
void lib966DE777_gf_SurviversPactApplyBuffs (string lp_unitType, int lp_player, string lp_behavior);
void lib966DE777_gf_CCDeathlessCreateObjectives ();
void lib966DE777_gf_CCStartZergAssaultTimer ();
void lib966DE777_gf_MassApplyCCClimateBehavior (string lp_climate, string lp_overrideBehavior, string lp_unitType, unitfilter lp_unitFilter, int lp_playerorEnemy);
void lib966DE777_gf_MassRemoveCCClimateBehavior (string lp_climate, string lp_overrideBehavior, string lp_unitType, unitfilter lp_unitFilter, int lp_playerorEnemy);
void lib966DE777_gf_MassApplyCCClimateUpgrades ();
void lib966DE777_gf_MassRemoveCCClimateUpgrades ();
void lib966DE777_gf_ApplyCCClimateBehaviortoUnit (string lp_climate, string lp_overrideBehavior, unit lp_unit, string lp_unitType, unitfilter lp_unitFilter, int lp_playerorEnemy);
void lib966DE777_gf_StartCCClimateTimer (string lp_climate);
void lib966DE777_gf_InitializeCCClimate ();
bool lib966DE777_gf_CheckCCClimateState (string lp_climate, int lp_checkState);
void lib966DE777_gf_CCClimateSetLighting ();
void lib966DE777_gf_ChaoticEraRandomizeClimate ();
point lib966DE777_gf_GetPlayerPrimaryBaseLocation (int lp_player);
void lib966DE777_gf_CheckandassignPrimaryBase ();
void lib966DE777_gf_GoldenChaliceUpdate ();
void lib966DE777_gf_FatalImpact (int lp_player);
void lib966DE777_gf_CCAtkDownUpdate ();
void lib966DE777_gf_GuidedNukeFollow (unit lp_targetUnit);
void lib966DE777_gf_CCGameSpeed ();
void lib966DE777_gf_CCPauseUnpauseGame (bool lp_pauseUnpause);
unit lib966DE777_gf_CCGrabclosestattackableEnemy (unit lp_unit, unitfilter lp_unitFilter);
void lib966DE777_gf_CCIssueenemyorder (unit lp_unit, order lp_order);
void lib966DE777_gf_CCorderunittoburrow (unit lp_unit);
void lib966DE777_gf_CCFullProcessUnits (unitgroup lp_units);
void lib966DE777_gf_CCProcessUnitBehaviorsAbilities (unit lp_targetUnit, bool lp_inverse);
void lib966DE777_gf_MassApplyCCUpgrades (bool lp_inverse);
void lib966DE777_gf_MassApplyCCBehavior (string lp_contract, string lp_overrideBehavior, string lp_unitType, unitfilter lp_unitFilter, int lp_playerorEnemy, bool lp_inverse);
void lib966DE777_gf_MassApplyCCAbility (string lp_contract, string lp_overrideAbility, string lp_unitType, unitfilter lp_unitFilter, int lp_playerorEnemy, bool lp_inverse);
void lib966DE777_gf_ApplyCCBehaviortoUnit (string lp_contract, string lp_overrideBehavior, unit lp_unit, string lp_unitType, unitfilter lp_unitFilter, int lp_playerorEnemy, bool lp_inverse);
void lib966DE777_gf_ApplyCCAbilitytoUnit (string lp_contract, string lp_overrideAbility, unit lp_unit, string lp_unitType, unitfilter lp_unitFilter, int lp_playerorEnemy, bool lp_inverse);
bool lib966DE777_gf_CheckCCState (string lp_contract, int lp_checkState);
void lib966DE777_gf_CCStartPriorityAction (trigger t);
void lib966DE777_gf_CCGameStart (trigger t);
void lib966DE777_gf_CCInitializePlayerSettings ();
void lib966DE777_gf_PopulateContractbtns (string lp_class, int lp_classID);
void lib966DE777_gf_PopulateClassbtns ();
void lib966DE777_gf_ClearContractBtns ();
void lib966DE777_gf_CreateCCbtn (string lp_cCInstance, int lp_classID, int lp_listID, int lp_offsetX, int lp_offsetY);
void lib966DE777_gf_CCApplyUnitCategoryIdentifier (unit lp_unit, string lp_identifierBehavior, string lp_category, unitfilter lp_unitFilter);
void lib966DE777_gf_CCIterateChecks ();
void lib966DE777_gf_ProcessContractSpecialFlags (string lp_cCInstance);
void lib966DE777_gf_ProcessContractRequirements (string lp_cCInstance);
void lib966DE777_gf_CreateCCDialogueStats ();
void lib966DE777_gf_HighlightCCButton (int lp_button, bool lp_on);
void lib966DE777_gf_ModifyCCData (string lp_cCInstance, int lp_toggleState, int lp_availability);
void lib966DE777_gf_ToggleContract (string lp_contract);
void lib966DE777_gf_TallyContracts ();
void lib966DE777_gf_RefreshCCStats ();
void lib966DE777_gf_CheckCCStartCondition ();

// Trigger Declarations
trigger lib966DE777_gt_FactionSwapPlayerUnit;
trigger lib966DE777_gt_fatal;
trigger lib966DE777_gt_random;
trigger lib966DE777_gt_ccdebug;
trigger lib966DE777_gt_ccmenu;
trigger lib966DE777_gt_bonuscomplete;
trigger lib966DE777_gt_cctopbar;
trigger lib966DE777_gt_raceswap;
trigger lib966DE777_gt_AllBonusObjectiveComplete;
trigger lib966DE777_gt_RandomizeGroundUnit;
trigger lib966DE777_gt_RandomizeAirUnit;
trigger lib966DE777_gt_CCProductionBanActivate;
trigger lib966DE777_gt_CreateCCTopbar;
trigger lib966DE777_gt_TopbarAbilityBulletTime;
trigger lib966DE777_gt_TopbarAbilitySalvage;
trigger lib966DE777_gt_ResourceDrain;
trigger lib966DE777_gt_ApplyCollapseManifestation;
trigger lib966DE777_gt_SurviversPactVeteran;
trigger lib966DE777_gt_SurviversPactElite;
trigger lib966DE777_gt_SurviversPactAce;
trigger lib966DE777_gt_UnitDeathTally;
trigger lib966DE777_gt_CCZergAssault;
trigger lib966DE777_gt_CCClimateToggle;
trigger lib966DE777_gt_CCHeliumFlash;
trigger lib966DE777_gt_CCIonCannon;
trigger lib966DE777_gt_CCArmIonCannon;
trigger lib966DE777_gt_CCScreenFlip;
trigger lib966DE777_gt_SolariteBombardment;
trigger lib966DE777_gt_GuidedNuke;
trigger lib966DE777_gt_PlayerReloadsGame;
trigger lib966DE777_gt_CCInitialBehaviorsAbilities;
trigger lib966DE777_gt_CCInitialBehaviorsAbilitiesOldDeprecated;
trigger lib966DE777_gt_CCInitialOthers;
trigger lib966DE777_gt_CCUnitTakesDamage;
trigger lib966DE777_gt_CCRemoveUnit;
trigger lib966DE777_gt_CCProcessNewUnit;
trigger lib966DE777_gt_CCProcessNewUnitnoability;
trigger lib966DE777_gt_CCProcessNewUnittrainingfinish;
trigger lib966DE777_gt_CCIncrementTick025s;
trigger lib966DE777_gt_InitializeCCMenu;
trigger lib966DE777_gt_CCStartGame;
trigger lib966DE777_gt_CCStartGamePriorityActions;
trigger lib966DE777_gt_CCDialogueButtonClick;

// Library Initialization
void lib966DE777_InitVariables ();

